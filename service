namespace Terrasoft.Configuration
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Data;
    using System.Globalization;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.ServiceModel.Activation;
    using System.ServiceModel.Web;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web;
    using Terrasoft.Common;
    using Terrasoft.Core;
    using Terrasoft.Core.DB;
    using Terrasoft.Core.Entities;
    using Terrasoft.Core.Factories;
    using Terrasoft.Core.Packages;
    using Terrasoft.Web;
    using global::Common.Logging;

    //using Terrasoft.Core;
    // Класс сервиса помечен обязательными атрибутами [ServiceContract] и
    // [AspNetCompatibilityRequirements] с параметрами.
    [ServiceContract]
    [
        AspNetCompatibilityRequirements(
            RequirementsMode = AspNetCompatibilityRequirementsMode.Required)
    ]
    public class CustomConfigurationServiceTest
    {
        private UserConnection _userConnection;

        // Метод сервиса помечен обязательными атрибутами [OperationContract] и
        // [WebInvoke] с параметрами.
        [OperationContract]
        [
            WebInvoke(
                Method = "POST",
                RequestFormat = WebMessageFormat.Json,
                BodyStyle = WebMessageBodyStyle.Wrapped,
                ResponseFormat = WebMessageFormat.Json)
        ]
        public string GetTransformValue(string inputParam)
        {
            var result = "Название Юр Лица : ";
            try
            {
                _userConnection =
                    (UserConnection)
                    HttpContext.Current.Session["UserConnection"];
                using (
                    DBExecutor dbExecutor = _userConnection.EnsureDBConnection()
                )
                {
                    var qp = new QueryParameterCollection();
                    qp
                        .Add(new QueryParameter {
                            Name = "TsBIN",
                            Value = inputParam
                        });
                    var sql =
                        "SELECT \"Name\" " +
                        "FROM \"Account\" " +
                        "WHERE \"TsBIN\" = :TsBIN";
                    using (var rd = dbExecutor.ExecuteReader(sql, qp))
                    {
                        while (rd.Read())
                        {
                            result += rd.GetString(0);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                result += ex.Message;
            }
            return result;
        }
 
    }
}


